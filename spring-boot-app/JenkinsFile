pipeline {
    agent {
        docker {
            image 'kiran63/maven:latest'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
  
    stages {
       stage('Git') {
 
            steps {
 
                checkout([$class: 'GitSCM', branches: [[name: '*/*']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/mfarhansayed/php-project.git']]])                   }
 
        }
        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                // build the project and create a JAR files
                sh 'cd spring-boot-app && mvn clean package'
            }
        }
        
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "kiran63/sample-maven-app:${BUILD_NUMBER}"
                DOCKERFILE_LOCATION = "spring-boot-app/Dockerfile"
                REGISTRY_CREDENTIALS = credentials('docker-cred1')
            }
            steps {
                script {
                    sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred1") {
                        dockerImage.push()
                    }
                }
            }
        }
        
    }
}
